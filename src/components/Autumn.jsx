/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/autumn_forest.glb -o ./src/components/Autumn.jsx -k -K -r public 
Author: Paul (https://sketchfab.com/paul_paul_paul)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/free-skybox-autumn-forest-3ba29976640c4b26a66d6cea0556b7d6
Title: FREE - SkyBox Autumn Forest
*/

import { useScroll, useGLTF } from "@react-three/drei";
import { useFrame, useThree } from '@react-three/fiber'
import { useRef, useEffect, Suspense } from "react";

export default function Autumn(props) {
  const { nodes, materials } = useGLTF('/models/autumn_forest.glb')
  const scroll = useScroll()
  const { camera } = useThree();
  // const controlsRef = useRef();

  if (window.innerWidth > 768) {
    useFrame((state, delta) => {
      // The offset is between 0 and 1, you can apply it to your models any way you like
      const offset = scroll.offset;
      // Calculate the position of the camera
      const x = Math.sin(offset * Math.PI * 2) * -10;
      const z = Math.cos(offset * Math.PI * 2) * -10;
      // Set the camera's position
      console.log("camera: ", x)
      camera.position.set(-x, camera.position.y, z);
      state.camera.lookAt(0, 0, 0);
    });
  } else {
    // Code to run only on mobile
    // ...
  }
  return (
    <group {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="29cf888c7a0249b5803e5ece3e2bee4bfbx" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
            <group name="RootNode">
              <group name="Sphere" rotation={[-Math.PI / 2, 0, 0]} scale={50000}>
                <mesh name="Sphere__0" geometry={nodes.Sphere__0.geometry} material={materials['Scene_-_Root']} />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/autumn_forest.glb')
